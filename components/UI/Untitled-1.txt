<Animated.View
          style={{
            width: 338, height: 488,
            position: 'absolute',
            top: -36,
            left: -4,
            borderRadius: 32,
            backgroundColor: colors[(this.state.currentIndex + 2) % 3],
            zIndex: 1,
            bottom: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [40, 20]
            }),
            transform: [{
              scale: this.state.cardsStackedAnim.interpolate({
                inputRange: [0, 1], outputRange: [0.80, 0.90]
              })
            }],
            opacity: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [0.3, 0.6]
            }),
          }}
        />
        <Animated.View
          style={{
            width: 338, height: 488,
            position: 'absolute',
            top: -0,
            left: -4,
            borderRadius: 32,
            backgroundColor: colors[(this.state.currentIndex + 1) % 3],
            zIndex: 2,
            bottom: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [20, 0]
            }),
            transform: [{
              scale: this.state.cardsStackedAnim.interpolate({
                inputRange: [0, 1], outputRange: [0.90, 1.0]
              })
            }],
            opacity: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [0.6, 1]
            }),
          }}
        />
        <Animated.View
          {...this.cardsPanResponder.panHandlers}
          style={{
            width: 338, height: 488,
            position: 'absolute',
            top: 50,
            left: -4,
            borderRadius: 32,
            backgroundColor: colors[this.state.currentIndex % 3],
            zIndex: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 0.5, 1], outputRange: [3, 2, 0]
            }),
            bottom: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [0, 40]
            }),
            opacity: this.state.cardsStackedAnim.interpolate({
              inputRange: [0, 1], outputRange: [1, 0.3]
            }),
            transform: [
              { translateX: this.state.cardsPan.x },
              {
                scale: this.state.cardsStackedAnim.interpolate({
                  inputRange: [0, 1], outputRange: [1, 0.80]
                })
              },
            ],
          }}
        />